- name: build hosts file
  lineinfile: dest=/etc/hosts regexp='.*{{ item }}$' line="{{ hostvars[item].ansible_eth0.ipv4.address }} {{item}}" state=present
  when: hostvars[item].ansible_eth0.ipv4.address is defined
  with_items: "{{ groups['all'] }}"

- name: disable selinux
  selinux: state=disabled

- name: disable of selinux - now
  command: setenforce 0

- name: Add Kubernetes yum repo
  yum_repository:
    name: kubernetes
    description: Kubernetes kubeadm
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
    gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg
    gpgcheck: yes

- name: install utility programs
  dnf: name={{ packages }} state=present disable_gpg_check=yes
  vars:
    packages:
      - wget
      - screen
      - vim
      - iptables
      - iptables-utils
      - iptables-services
      - ncurses-term
      - kernel-devel
      - kernel-headers
      - dnf-plugins-core
      - jq
      - lvm2
      - device-mapper-persistent-data
      - dnf-plugins-core
      - epel-release


- name: install hashicorp repo
  command: dnf config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo

- name: install docker ce repo
  command: dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

- name: install docker ce and nomad
  dnf: name={{ packages }} state=present disable_gpg_check=yes
  vars:
    packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - nomad
      - consul

- name: remove bug in systemd file for consul
  lineinfile: dest=/usr/lib/systemd/system/consul.service regexp="^Type=notify" state=absent

- name: enable docker services
  ansible.builtin.systemd: name=docker state=started enabled=true

- name: turn off swap
  command: swapoff -a

- name: remove swap from /etc/fstab
  lineinfile:
    path: /etc/fstab
    state: absent
    regexp: "swap"

- name: set tunables
  shell: echo 1 | sudo tee /proc/sys/net/bridge/bridge-nf-call-{{ item }}
  with_items:
    - arptables
    - ip6tables
    - iptables

- name: get cni plugins
  get_url:
    url: https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz
    dest: /home/vagrant/cni-plugins.tar.gz

- name: make dir /opt/cni
  file:
    path: /opt/cni/bin
    state: directory

- name: install cni plugins
  unarchive:
    src: /home/vagrant/cni-plugins.tar.gz
    remote_src: yes
    dest: /opt/cni/bin

- name: allow ports
  command: firewall-cmd --permanent --zone=public --add-port={{ item }}
  with_items:
    - 4646/tcp
    - 4647/tcp
    - 4648/tcp
    - 8300/tcp
    - 8301/tcp
    - 8301/udp
    - 8302/tcp
    - 8302/udp
    - 8400/tcp
    - 8500/tcp
    - 8600/tcp
    - 8600/udp

- name: reload firewall
  command: firewall-cmd --reload

- name: set up consul bind_addr
  lineinfile: dest=/etc/consul.d/consul.hcl regexp="^#bind_addr" line="bind_addr = \"{{ ansible_eth0.ipv4.address }}\"" state=present

